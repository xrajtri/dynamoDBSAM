AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS Lambda Template for DynamoDB table.
Globals:
  Function:
    Timeout: 120
    Environment:
      Variables:
        TABLE_NAME: !Ref Table
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
Resources:
  CreateFunction:
    Type: AWS::Serverless::Function 
    Properties:
      FunctionName: CreateFunction
      Description: Lambda function to insert data into table.
      CodeUri: .
      Handler: index.create
      Policies: AmazonDynamoDBFullAccess
      Runtime: nodejs12.x
      Events:
        PostResource:
          Type: Api 
          Properties:
            Path: /todo/new
            Method: post
  GetAllFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetAllFunction
      Description: Lambda function to get all the data from the table.
      Policies: AmazonDynamoDBReadOnlyAccess
      CodeUri: .
      Handler: index.getAll
      Runtime: nodejs12.x
      Events:
        GetResource:
          Type: Api
          Properties:
            Method: get
            Path: /todo/all
  UpdateFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: UpdateFunction
      Description: Lambda function to update specific record.
      Policies: AmazonDynamoDBFullAccess
      CodeUri: .
      Handler: index.update
      Runtime: nodejs12.x
      Events:
        PutResource:
          Type: Api
          Properties:
            Method: put
            Path: /todo/update
  DeleteFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DeleteFunction
      Description: Lambda function to delete specific record.
      Policies: AmazonDynamoDBFullAccess
      CodeUri: .
      Handler: index.delete
      Runtime: nodejs12.x
      Events:
        DeleteResource:
          Type: Api
          Properties:
            Method: delete
            Path: /todo/delete
  
  Table:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: todo_id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: my-db-table
Outputs:
  CreateAPI:
    Description: "API Gateway endpoint URL for Dev stage for create record function."
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
  CreateFunction:
    Description: "CreateFunction ARN"
    Value: !GetAtt CreateFunction.Arn
  GetAllFunction:
    Description: "Get All Function ARN"
    Value: !GetAtt GetAllFunction.Arn
  UpdateFunction:
    Description: "Update function ARN"
    Value: !GetAtt UpdateFunction.Arn
  DeleteFunction:
    Description: "DeleteFunction ARN"
    Value: !GetAtt DeleteFunction.Arn